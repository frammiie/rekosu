services:
  service:
    build: .
    environment:
      HOST:
      NODE_ENV:
      AUTH_OSU_ID:
      AUTH_OSU_SECRET:
      AUTH_SECRET:
      AUTH_TRUST_HOST:
      AUTH_URL:
      DATABASE_URL:
      REDIS_HOST:
      ANALYTICS_WEBSITE_ID:
      ANALYTICS_SCRIPT_URL:
    networks:
      - internal
    depends_on:
      - database
      - cache
    restart: always

  database:
    build: ./docker/database
    environment:
      POSTGRES_USER:
      POSTGRES_PASSWORD:
      POSTGRES_DB:
    networks:
      - internal
    volumes:
      - ./docker/database/data:/var/lib/postgresql/data
    restart: always
  
  cache:
    image: redis:8.0.1-alpine
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - internal
    restart: always

  proxy:
    image: nginx:1.27.5-alpine
    ports:
      - 80:80
      - 443:443
    networks:
      - internal
    volumes:
      - ./docker/proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/proxy/certs:/opt/certs:ro
      - ./docker/proxy/certbot/conf:/etc/letsencrypt
      - ./docker/proxy/certbot/www:/var/www/certbot
    depends_on:
      - service
    restart: always

  # certbot:
  #   image: certbot/certbot
  #   volumes:
  #     - ./docker/proxy/certbot/conf:/etc/letsencrypt
  #     - ./docker/proxy/certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  internal:
    driver: bridge